using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ConsoleApplication5
{
    class Program
    {
        static void Main(string[] args)
        {
            mylist lst = new mylist();
            lst.add(2);
            lst.add(3);
            lst.add(4);
            lst.add(7);
            for (int i = 0; i < 4; i++ )
            {
                Console.WriteLine(lst.get(i));
            }
            lst.delete(1);
            Console.WriteLine("After Delete \n------------");
            for (int i = 0; i < lst.length; i++)
            {
                Console.WriteLine(lst.get(i));
            }
        }
    }

    public class node
    {
        public int value;
        public node next;
    }

    public class mylist
    {
        public int length=0;
        public node start;
        public node curr;
        public void add(int value)
        {
            if (start == null)
            {
                start = new node();
                curr = start;
                curr.value = value;
                Console.WriteLine("Inserted {0}", value);
                length++;
            }
            else
            {
                while(true)
                {
                    if (curr.next == null)
                    {
                        curr.next = new node();
                        curr = curr.next;
                        curr.value = value;
                        Console.WriteLine("Inserted {0}",value);
                        length++;
                        break;
                    }
                    else
                    {
                        curr = curr.next;
                    }
                }
            }
        }
        public int get(int index)
        {
            curr = start;
            int i;
            for (i = 0; i < (index) ;i++ )
            {
                if (curr.next == null)
                {
                    break;
                }
                else
                {
                    curr = curr.next;
                }
            }
            if (index > i)
            {
                return (-1);
            }
            else
            {
                return curr.value;
            }
        }

        public void delete(int index)
        {
            curr = start;
            int max = 0;
            for (int i = 0; i < (index-1); i++)
            {
                if (curr.next == null)
                {
                    break;
                }
                else
                {
                    curr = curr.next;
                    max++;
                }
            }
            if (index == 0)
            {
                node temp = start;
                start = start.next;
                temp = null;
                length--;
            }
            else if (curr.next != null && curr.next.next != null)
            {
                node temp = curr.next;
                curr.next = temp.next;
                temp = null;
                length--;
            }
            else if(index == (max+1))
            {
                curr = curr.next;
                curr = null;
                length--;
            }
        }
    }
}
